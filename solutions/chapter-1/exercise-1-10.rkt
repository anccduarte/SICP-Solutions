
#lang sicp


;------------------------------------------------------------------------------------------
;EXRECISE 1.10.
;---
;The following procedure computes a mathematical function called Ackermann's function
;(SEE BELOW *). What are the values of the following expressions? (A 1 10), (A 2 4) and
;(A 3 3). Consider the following procedures, where 'A' is the procedure defined above
;(SEE BELOW **). Give concise mathematical definitions for the functions computed by the
;procedures 'f', 'g', and 'h' for positive integer values of 'n'. For example, (k n)
;computes 5*n^2.
;------------------------------------------------------------------------------------------


;---
;PART 1
;---

;(*) procedural representation of the ackermann's function
;---
(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1) (A x (- y 1))))))

;expression 1
;---
(A 1 10)
;(A 1 10)
;(A 0 (A 1 9))
;(* 2 (A 1 9))
;(* 2 (A 0 (A 1 8)))
;(* 2 (* 2 (A 1 8)))
;(* 2 (* 2 (A 0 (A 1 7))))
;(* 2 (* 2 (* 2 (A 1 7))))
;(* 2 (* 2 (* 2 (A 0 (A 1 6)))))
;(* 2 (* 2 (* 2 (* 2 (A 1 6)))))
;(* 2 (* 2 (* 2 (* 2 (A 0 (A 1 5))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (A 1 5))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 4)))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 4)))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 3))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 3))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 2)))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 2)))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 1))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 1))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 2)))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 4))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 8)))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 16))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 32)))))
;(* 2 (* 2 (* 2 (* 2 64))))
;(* 2 (* 2 (* 2 128)))
;(* 2 (* 2 256))
;(* 2 512)
;1024

;expression 2
;---
(A 2 4)
;(A 2 4)
;(A 1 (A 2 3))
;(A 1 (A 1 (A 2 2)))
;(A 1 (A 1 (A 1 (A 2 1))))
;(A 1 (A 1 (A 1 2)))
;(A 1 (A 1 (A 0 (A 1 1))))
;(A 1 (A 1 (* 2 (A 1 1))))
;(A 1 (A 1 (* 2 2)))
;(A 1 (A 1 4))
;(A 1 (A 0 (A 1 3)))
;(A 1 (* 2 (A 1 3)))
;(A 1 (* 2 (A 0 (A 1 2))))
;(A 1 (* 2 (* 2 (A 1 2))))
;(A 1 (* 2 (* 2 (A 0 (A 1 1)))))
;(A 1 (* 2 (* 2 (* 2 (A 1 1)))))
;(A 1 (* 2 (* 2 (* 2 2))))
;(A 1 (* 2 (* 2 4)))
;(A 1 (* 2 8))
;(A 1 16)
;(A 0 (A 1 15))
;(* 2 (A 1 15))
;(* 2 (A 0 (A 1 14)))
;(* 2 (* 2 (A 1 14)))
;(* 2 (* 2 (A 0 (A 1 13))))
;(* 2 (* 2 (* 2 (A 1 13))))
;(* 2 (* 2 (* 2 (A 0 (A 1 12)))))
;(* 2 (* 2 (* 2 (* 2 (A 1 12)))))
;(* 2 (* 2 (* 2 (* 2 (A 0 (A 1 11))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (A 1 11))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 10)))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 10)))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 9))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 9))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 8)))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 8)))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 7))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 7))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 6)))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 6)))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 5))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 5))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 4)))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 4)))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 3))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 3))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 2)))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 2)))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 1))))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 1))))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 2)))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 4))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 8)))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 16))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 32)))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 64))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 128)))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 256))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 512)))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 1024))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 2048)))))
;(* 2 (* 2 (* 2 (* 2 4096))))
;(* 2 (* 2 (* 2 8192)))
;(* 2 (* 2 16384))
;(* 2 32768)
;65536

;expression 3
;---
(A 3 3)
;(A 3 3)
;(A 2 (A 3 2))
;(A 2 (A 2 (A 3 1)))
;(A 2 (A 2 2))
;(A 2 (A 1 (A 2 1)))
;(A 2 (A 1 2))
;(A 2 (A 0 (A 1 1)))
;(A 2 (* 2 (A 1 1)))
;(A 2 (* 2 2))
;(A 2 4)
;(A 1 (A 2 3))
;(A 1 (A 1 (A 2 2)))
;(A 1 (A 1 (A 1 (A 2 1))))
;(A 1 (A 1 (A 1 2)))
;(A 1 (A 1 (A 0 (A 1 1))))
;(A 1 (A 1 (* 2 (A 1 1))))
;(A 1 (A 1 (* 2 2)))
;(A 1 (A 1 4))
;(A 1 (A 0 (A 1 3)))
;(A 1 (* 2 (A 1 3)))
;(A 1 (* 2 (A 0 (A 1 2))))
;(A 1 (* 2 (* 2 (A 1 2))))
;(A 1 (* 2 (* 2 (A 0 (A 1 1)))))
;(A 1 (* 2 (* 2 (* 2 (A 1 1)))))
;(A 1 (* 2 (* 2 (* 2 2))))
;(A 1 (* 2 (* 2 4)))
;(A 1 (* 2 8))
;(A 1 16)
;(A 0 (A 1 15))
;(* 2 (A 1 15))
;(* 2 (A 0 (A 1 14)))
;(* 2 (* 2 (A 1 14)))
;(* 2 (* 2 (A 0 (A 1 13))))
;(* 2 (* 2 (* 2 (A 1 13))))
;(* 2 (* 2 (* 2 (A 0 (A 1 12)))))
;(* 2 (* 2 (* 2 (* 2 (A 1 12)))))
;(* 2 (* 2 (* 2 (* 2 (A 0 (A 1 11))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (A 1 11))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 10)))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 10)))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 9))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 9))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 8)))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 8)))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 7))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 7))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 6)))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 6)))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 5))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 5))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 4)))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 4)))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 3))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 3))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 2)))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 2)))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 0 (A 1 1))))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 1))))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 2)))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 4))))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 8)))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 16))))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 32)))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 64))))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 128)))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 256))))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 512)))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 (* 2 1024))))))
;(* 2 (* 2 (* 2 (* 2 (* 2 2048)))))
;(* 2 (* 2 (* 2 (* 2 4096))))
;(* 2 (* 2 (* 2 8192)))
;(* 2 (* 2 16384))
;(* 2 32768)
;65536


;---
;PART 2
;---

;(**) procedures defined in terms of 'A'
;---
(define (f1 n) (A 0 n))
(define (g1 n) (A 1 n))
(define (h1 n) (A 2 n))

;define 'fast-exp' to help redifine 'A' in terms of exponential expressions
;---
(define even? (lambda (x) (= (remainder x 2) 0)))
(define square (lambda (x) (* x x)))
(define (fast-exp b e)
  (cond ((= e 0) 1)
        ((even? e) (square (fast-exp b (/ e 2))))
        (else (* b (fast-exp b (dec e))))))

;prodedure 1 -> equivalent to f(n) = 2*n
;---
(define (f2 n) (* 2 n))
;---
;test for equivalency
;---
(= (f1 2) (f2 2)) (= (f1 3) (f2 3)) (= (f1 4) (f2 4)) (= (f1 5) (f2 5))

;procedure 2 -> equivalent to g(n) = 2^n
;---
(define (g2 n) (fast-exp 2 n))
;---
;test for equivalency
;---
(= (g1 2) (g2 2)) (= (g1 3) (g2 3)) (= (g1 4) (g2 4)) (= (g1 5) (g2 5))

;procedure 3 -> equivalent to h(n) = 2^(h(n-1)) (base case: n=0 => h(n)=1)
;---
(define (h2 n)
  (if (= n 0) 1 (fast-exp 2 (h2 (dec n)))))
;---
;test for equivalency
;---
(= (h1 2) (h2 2)) (= (h1 3) (h2 3)) (= (h1 4) (h2 4)) (= (h1 5) (h2 5))

